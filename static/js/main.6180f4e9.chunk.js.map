{"version":3,"sources":["components/PageNotFound/PageNotFound.tsx","components/HomePage/HomePage.tsx","components/PeoplePage/PersonLink/PersonLink.tsx","components/PeoplePage/Parent/Parent.tsx","components/PeoplePage/PersonInfo/PersonInfo.tsx","components/PeoplePage/PeopleList/PeopleList.tsx","components/Loader/Loader.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNotFound","className","HomePage","PersonLink","person","to","slug","classNames","sex","name","Parent","parentName","parent","people","find","undefined","getParentByName","PersonInfo","selectedPersonSlug","born","died","fatherName","motherName","PeopleList","map","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","setPeople","hasServerError","setHasServerError","useParams","personSlug","getPeopleFromServer","useEffect","peopleExist","length","allowPeopleDisplay","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6180f4e9.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const PageNotFound: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLinkProps } from '../PeoplePage.types';\n\nexport const PersonLink: FC<PersonLinkProps> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { Person } from '../../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { ParentProps } from '../PeoplePage.types';\n\nfunction getParentByName(name: string | null, people: Person[]) {\n  const parent = people.find(person => person.name === name);\n\n  return parent || undefined;\n}\n\nexport const Parent: FC<ParentProps> = ({ parentName, people }) => {\n  const parent = getParentByName(parentName, people);\n\n  if (!parentName) {\n    return <span>-</span>;\n  }\n\n  if (!parent) {\n    return <span>{parentName}</span>;\n  }\n\n  return <PersonLink person={parent} />;\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Parent } from '../Parent/Parent';\nimport { PersonInfoProps } from '../PeoplePage.types';\n\nexport const PersonInfo: FC<PersonInfoProps> = ({\n  person, selectedPersonSlug, people,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedPersonSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        <Parent\n          parentName={motherName}\n          people={people}\n        />\n      </td>\n      <td>\n        <Parent\n          parentName={fatherName}\n          people={people}\n        />\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\nimport { PeopleListProps } from '../PeoplePage.types';\n\nexport const PeopleList: FC<PeopleListProps> = ({\n  people,\n  selectedPersonSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <PersonInfo\n              key={person.slug}\n              person={person}\n              people={people}\n              selectedPersonSlug={selectedPersonSlug}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleList } from './PeopleList/PeopleList';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage: FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasServerError, setHasServerError] = useState(false);\n  const { personSlug = '' } = useParams();\n\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      setPeople(await getPeople());\n    } catch {\n      setHasServerError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const peopleExist = people.length > 0;\n  const allowPeopleDisplay = !isLoading && !hasServerError && peopleExist;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && <Loader />}\n\n        {hasServerError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!peopleExist && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {allowPeopleDisplay && (\n          <PeopleList\n            people={people}\n            selectedPersonSlug={personSlug}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate, Route, Routes, NavLink,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n\n              <Route\n                path=\":personSlug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}